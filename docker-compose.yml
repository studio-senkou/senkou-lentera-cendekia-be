services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: senkou-lentera-cendekia-api-prod
    restart: unless-stopped
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    env_file:
      - .env.production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - senkou_lentera_cendekia_network

  postgres:
    image: postgres:17-alpine
    container_name: senkou-lentera-cendekia-postgres-prod
    restart: unless-stopped
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE:-senkou_lentera_cendekia}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_DATABASE:-senkou_lentera_cendekia}",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - senkou_lentera_cendekia_network

  redis:
    image: redis:latest
    container_name: senkou-lentera-cendekia-redis-prod
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:-}"]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    networks:
      - senkou_lentera_cendekia_network

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: senkou-lentera-cendekia-cloudflared
    restart: unless-stopped
    command: tunnel --no-autoupdate --protocol http2 run --token ${TUNNEL_TOKEN:-}
    networks:
      - senkou_lentera_cendekia_network
    depends_on:
      - app

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  senkou_lentera_cendekia_network:
    driver: bridge
